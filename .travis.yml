sudo: false
language: node_js
node_js:
- stable
cache:
  yarn: true
  directories:
  - node_modules
branches:
  only:
  - master
  - next
  - v0.11.0
env:
  global:
    # GH_OAUTH_TOKEN is the oauth token generated as described at
    # https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
    #
    # curl -u 'username' -d '{"scopes":["repo"],"note":"push to gh-pages from travis"}' https://api.github.com/authorizations
    #
    # It must be encrypted using the travis gem
    # http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables
    #
    # travis encrypt -r react-native-training/react-native-elements GH_TOKEN=4990e9de9dc7dbedef83d09b04da43ed03a23af0 --add
    #
    - secure: PMCAhAbxLLMr6WOq4ESbWEhkZGfNOhyfAo7jyoUweATTYiKqrDBkG0K//2IoyTFyBHIlQlrj+LSSNxvjeLIAVOa3wBGer35FS8AoGHLvJ0jjzTEP4YZcYi10zbTgxk4CBykm1/DGn2c3nUsF4DZ1QlzC8Smz80/Afdx3rjF7zm2V513je8AXGGWeBU3vszHMIqrbbN83DTQ0Rf52peHLS9/XKgJQvkOEL2KEF4N7GqUoTPA4EsaUmz4uwpRj3xQ8EeopfrCXNew3fk/qfFchlJ84Azetl5DocYqa6LNH4G/2QzIA0pZgzv4nBQUJW1wotovXk2GqyEeGBNOL+iZ9TJwVqRMhtmcFzBE+rcCaeEx/jId3r5PthUdAkCqjwyywiU+a7uddN6RU+sSAB3EuFS1pnoSX2lYmgSlbFxaoExMGHzmFqKwECrkKU/x3XoIuLCrNi+NCjsybVnLbqPdbQYSJgF/tFm2Z6z70xG9fBW31ABoXwuRig5H3sKXWQDLsB8k+LWu7jCXa0LMrB5c55D0nRXNFJS5SBKGNSWiMU2WgEEXaP4PMmSb7KwGGwC6ihVtYDKMI57/BJehi8zRs/8fY6wFvgorO7vsTTwwdLFTNUD0UyxpracfxTnpXi9ugsInhxY4RPI0mmtPFrLd8bBi6sTdKGyv6y4d8jtAp1hM=
    # User specific env variables
    - GH_USER_NAME: react-native-training
    - GH_PROJECT_NAME: react-native-elements
    - GH_FULL_NAME: Monte Thakkar
    - GH_EMAIL: mthakkar@mail.sfsu.edu
    - SITE_URL: https://react-native-training.github.io/react-native-elements/
    - GH_REF: github.com/react-native-training/react-native-elements/
script:
  # We want to gate on passing tests and a successful build
  - yarn test
after_script:
  - git config --global user.email "${GH_EMAIL}"
  - git config --global user.name "${GH_FULL_NAME}"
  # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
  - git submodule add -b gh-pages https://${GH_OAUTH_TOKEN}@github.com/${GH_USER_NAME}/${GH_PROJECT_NAME} site 2>&1
  - mkdocs build --clean
  - cd site
  - git checkout gh-pages
  - git rm -r .
  - cp -R ../site/* .
  - cp ../site/.* .
  - rev=$(git rev-parse --short HEAD)
  - git add -A .
  - git commit -m "Docs updated for ${rev}"
  # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
  - git push https://${GH_OAUTH_TOKEN}@github.com/${GH_USER_NAME}/${GH_PROJECT_NAME} gh-pages > /dev/null 2>&1
